#!/usr/bin/env python3

import logging, click
import os, sys
import pathlib, json
import csv, gzip, bz2

prog = 'generate_comparisons_files'
version = '0.0.0'

logger = logging.getLogger(prog)
logger.setLevel(logging.DEBUG)
format = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
formatter = logging.Formatter(format)

logstream = logging.StreamHandler()
logstream.setLevel(logging.DEBUG)
logstream.setFormatter(formatter)
logger.addHandler(logstream)

logfile = logging.FileHandler('generate_comparisons_files.log')
logfile.setLevel(logging.DEBUG)
logfile.setFormatter(formatter)
logger.addHandler(logfile)


@click.command()
@click.option('-i', '--indir', required=True, prompt=False, type=click.Path(exists=True, file_okay=False, dir_okay=True, readable=True, resolve_path=True))
@click.option('-o', '--outdir', required=True, prompt=False, type=click.Path(exists=False, writable=True, resolve_path=True))
@click.option('--comparisons', required=True, prompt=False, type=click.Path(exists=True, file_okay=True, dir_okay=False, readable=True, resolve_path=True))
@click.option('--groups', required=True, prompt=False, type=click.Path(exists=True, file_okay=True, dir_okay=False, readable=True, resolve_path=True))
@click.option('--comprehensive/--no-comprehensive', is_flag=True, default=False)
@click.option('--ignore-upper/--no-ignore-upper', is_flag=True, default=False)
@click.option('--ignore-diagonal/--no-ignore-diagonal', is_flag=True, default=True)
@click.option('--ignore-lower/--no-ignore-lower', is_flag=True, default=False)
@click.version_option(version=version)
def main(indir, outdir, comparisons, groups, comprehensive, ignore_upper, ignore_diagonal, ignore_lower):
    if os.path.isfile(outdir):
        abort()
    elif not os.path.exists(outdir):
        os.makedirs(outdir)
    
    pass


def abort():
    logger.error(f'aborting program...')
    sys.exit(1)


def open_handle(file, mode='rt'):
    ext = os.path.splitext(os.path.basename(file))[1]
    if ext == '.gz':
        handle = gzip.open(file, mode=mode)
    elif ext == '.bz2':
        handle = bz2.open(file, mode=mode)
    else:
        handle = open(file, mode)
    return handle


if __name__ == '__main__':
    main()
